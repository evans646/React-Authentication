{"version":3,"sources":["auth/useToken.js","auth/useUser.js","pages/UserInfoPage.js","pages/ForgotPasswordPage.js","util/useQueryParams.js","pages/LoginPage.js","pages/EmailVerificationSuccess.js","pages/EmailVerificationFail.js","pages/EmailVerificationLandingPage.js","pages/SignUpPage.js","auth/PrivateRoutes.js","pages/PleaseVerifyEmail.js","pages/PasswordResetSuccess.js","pages/PasswordResetFail.js","pages/PasswordResetLandingPage.js","pages/ProfilePage.js","Routes.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["useToken","useState","localStorage","getItem","token","setTokenInternal","newToken","setItem","useUser","getPayloadFromToken","encodedPayload","split","JSON","parse","atob","user","setUser","useEffect","UserInfoPage","setToken","id","email","isVerified","info","history","useHistory","favoriteFood","setFavoriteFood","hairColor","setHairColor","bio","setBio","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","setTimeout","saveChanges","a","axios","put","headers","Authorization","response","data","className","onChange","e","target","value","onClick","push","removeItem","ForgotPasswordPage","errorMessage","setErrorMessage","success","setSuccess","emailValue","setEmailValue","onSubmitClicked","message","placeholder","disabled","fold","arr","reduce","acc","x","i","last","length","everythingElse","slice","pairs","pair","LogInPage","passwordValue","setPasswordValue","googleOauthUrl","setGoogleOauthUrl","oauthToken","location","useLocation","currentParamsObj","URLSearchParams","search","entries","useQueryParams","get","url","console","log","loadOauthUrl","onLogInClicked","post","password","type","window","href","EmailVerificationSuccess","EmailVerificationFail","EmailVerificationLandingPage","isLoading","setIsLoading","isSuccess","setIsSuccess","verificationString","useParams","loadVerification","SignUpPage","confirmPasswordValue","setConfirmPasswordValue","onSignUpClicked","PrivateRoute","props","to","PleaseVerifyEmailPage","PasswordResetSuccess","PasswordResetFail","PasswordResetLandingPage","isFailure","setIsFailure","passwordResetCode","onResetClicked","newPassword","ProfilePage","stringify","abortController","AbortController","signal","deleteProfile","delete","then","abort","Routes","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0e96d76.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useToken = () => {\n    const [token, setTokenInternal] = useState(() => {\n        return localStorage.getItem('token');\n    });\n\n    const setToken = newToken => {\n        localStorage.setItem('token', newToken);\n        setTokenInternal(newToken);\n    }\n\n    return [token, setToken];\n}","import { useState, useEffect } from 'react';\nimport { useToken } from './useToken';\n\nexport const useUser = () => {\n    const [token] = useToken();\n\n    const getPayloadFromToken = token => {\n        const encodedPayload = token.split('.')[1];\n        return JSON.parse(atob(encodedPayload));\n    }\n\n    const [user, setUser] = useState(() => {\n        if (!token) return null;\n        return getPayloadFromToken(token);\n    });\n\n    useEffect(() => {\n        if (!token) {\n            setUser(null);\n        } else {\n            setUser(getPayloadFromToken(token));\n        }\n    }, [token]);\n\n    return user;\n};","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\n\nexport const UserInfoPage = () => {\n    const user = useUser();\n    const [token, setToken] = useToken();\n    const { id, email, isVerified, info } = user;\n\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [favoriteFood, setFavoriteFood] = useState(info.favoriteFood || '');\n    const [hairColor, setHairColor] = useState(info.hairColor || '');\n    const [bio, setBio] = useState(info.bio || '');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        try {\n            const response = await axios.put(`/api/users/${id}`, {\n                favoriteFood,\n                hairColor,\n                bio,\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const { token: newToken } = response.data;\n            setToken(newToken);\n            setShowSuccessMessage(true);\n        } catch (error) {\n            setShowErrorMessage(true);\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem('token');\n        history.push('/login');\n    }\n    \n    const resetValues = () => {\n        setFavoriteFood(info.favoriteFood);\n        setHairColor(info.hairColor);\n        setBio(info.bio);\n    }\n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1>Info for {email}</h1>\n            {!isVerified && <div className=\"fail\">You won't be able to make any changes until you verify your email</div>}\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <label>\n                Favorite Food:\n                <input\n                    onChange={e => setFavoriteFood(e.target.value)}\n                    value={favoriteFood} />\n            </label>\n            <label>\n                Hair Color:\n                <input\n                    onChange={e => setHairColor(e.target.value)}\n                    value={hairColor} />\n            </label>\n            <label>\n                Bio:\n                <input\n                    onChange={e => setBio(e.target.value)}\n                    value={bio} />\n            </label>\n            <hr />\n            <button onClick={saveChanges}>Save Changes</button>\n            <button onClick={resetValues}>Reset Values</button>\n             <button onClick={()=>history.push('/profile')}>View Profile</button> \n            <button onClick={logOut}>Sign Out</button>\n        </div>\n    );\n}","import { useState,useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport const ForgotPasswordPage = () => {\n    const [errorMessage, setErrorMessage] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    const [emailValue, setEmailValue,] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n\n    const onSubmitClicked = async () => {\n        try {\n            await axios.put(`/api/forgot-password/${emailValue}`);\n            setSuccess(true);\n            setShowSuccessMessage(true);\n            setTimeout(() => {\n                history.push('/login')\n            },3000)\n            \n        } catch (e) {\n            setErrorMessage(e.message)\n            setShowErrorMessage(true)\n            \n        };\n    };\n    return success ? (\n        <div className='content-container'>\n {showSuccessMessage && <div className='success'> Success!</div>}\n            <p>Check your email for a verification link</p>\n        </div>\n    ) : (\n        <div className='content-container'>\n            {showErrorMessage && <div className='fail'> {errorMessage}</div>}\n            <h1>Forgot password</h1>\n            <p>Enter your email to receive  a reset link</p>\n                <input\n                    value={emailValue}\n                    onChange={e => setEmailValue(e.target.value)}\n                    placeholder=\"someone@gmail.com\"\n                />\n                <button\n                    disabled={!emailValue}\n                    onClick={onSubmitClicked}\n                >Send reset link</button>\n        </div>\n    )\n};","/*\n    This is just a nice custom hook that we can\n    use to get all the query parameters from inside\n    our components. Don't worry about the details\n    unless you're curious :)\n*/\n\nimport { useLocation } from 'react-router-dom';\n\nconst pairs = arr => arr.reduce((acc, x, i) => {\n    if (i % 2 === 0) {\n        return [...acc, [x]];\n    } else {\n        const last = acc[acc.length - 1];\n        const everythingElse = acc.slice(0, acc.length - 1);\n        return [...everythingElse, [...last, x]];\n    }\n}, [])[0] || [];\n\nconst fold = arr => pairs(arr).reduce((acc, pair) => {\n    return {\n        ...acc,\n        [pair[0]]: pair[1],\n    }\n}, {});\n\nexport const useQueryParams = () => {\n    const location = useLocation();\n    const currentParamsObj = new URLSearchParams(location.search);\n    const params = fold([...currentParamsObj.entries()]);\n\n    return params;\n}","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport GoogleButton from 'react-google-button';\nimport { useToken } from '../auth/useToken';\nimport { useQueryParams } from '../util/useQueryParams';\n\nexport const LogInPage = () => {\n    const [,setToken] = useToken();\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [emailValue, setEmailValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    const [googleOauthUrl, setGoogleOauthUrl] = useState('');\n    const { token: oauthToken } = useQueryParams();\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (showErrorMessage) {\n            setTimeout(() => {\n                setShowErrorMessage(false);\n            }, 3000);\n        };\n    }, [showErrorMessage]);\n\n    useEffect(() => {\n        if (oauthToken) {\n            setToken(oauthToken);\n            history.push('/');\n        };\n    }, [oauthToken, setToken, history]);\n\n    useEffect(() => {\n        const loadOauthUrl = async () => {\n            try {\n                const response = await axios.get('/auth/google/url');\n                const { url } = response.data;\n                setGoogleOauthUrl(url);\n            } catch (e) {\n                console.log(e);\n            };\n        };\n        loadOauthUrl();\n    }, []);\n\n    const onLogInClicked = async () => {\n        try {\n            const response = await axios.post('/api/login', {\n                email: emailValue,\n                password: passwordValue,\n            });\n            const { token } = response.data;\n            setToken(token);\n            history.push('/');\n        } catch (e) {\n            setErrorMessage(e.message);\n            setShowErrorMessage(true)\n        };\n    };\n    return (\n        <div className=\"content-container\">\n            <h1>Sign In</h1>\n            {showErrorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input\n                value={emailValue}\n                onChange={e => setEmailValue(e.target.value)}\n                placeholder=\"someone@gmail.com\" />\n            <input\n                type=\"password\"\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <hr />\n            <button\n                disabled={!emailValue || !passwordValue}\n                onClick={onLogInClicked}>Sign In</button>\n            <button onClick={() => history.push('/forgot-password')}>Forgot your password?</button>\n            <button onClick={() => history.push('/signup')}>Don't have an account? Sign Up</button>\n            <GoogleButton  disabled={!googleOauthUrl}\n                onClick={() => { window.location.href = googleOauthUrl }} className=\"google-btn\"/>\n            {/* <button\n                disabled={!googleOauthUrl}\n                onClick={() => { window.location.href = googleOauthUrl }}\n            >Log in with Google</button> */}\n        </div>\n    );\n};","import { useHistory } from \"react-router-dom\";\n\n\nexport const EmailVerificationSuccess = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h1>Success!</h1>\n            <p>Thanks for verifying your email address, now you have access to all the application features.</p>\n            <button onClick={() => history.push('/')}>Go to home</button>\n        </div>\n    );\n};","import { useHistory } from \"react-router-dom\";\n\n\nexport const EmailVerificationFail = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h1>Uh no...</h1>\n            <p>Email verification failed, something went wrong while trying to verify your email</p>\n            <button onClick={() => history.push('/signup')}>Back to sign Up</button>\n        </div>\n    );\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { EmailVerificationSuccess } from './EmailVerificationSuccess';\nimport { EmailVerificationFail } from './EmailVerificationFail';\n\n\n\n\nexport const EmailVerificationLandingPage = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const { verificationString } = useParams();\n    const [,setToken] = useToken();\n\n    useEffect(() => {\n        const loadVerification = async () => {\n            try {\n                const response = await axios.put('/api/verify-email',{ verificationString });\n                const { token } = response.data;\n                setToken(token);\n                setIsSuccess(true);\n                setIsLoading(false);\n            } catch (e) {\n                setIsSuccess(false);\n                setIsLoading(false);\n            }\n        }\n\n        loadVerification();\n    }, [setToken, verificationString]);\n\n    if (isLoading) return <p>Loading...</p>;\n    if (!isSuccess) return <EmailVerificationFail />\n    return <EmailVerificationSuccess />\n};","import { useState,useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\n\nexport const SignUpPage = () => {\n    const [,setToken] = useToken();\n    const [errorMessage, setErrorMessage] = useState('');\n    const [emailValue, setEmailValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n    \n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (showErrorMessage) {\n            setTimeout(() => {\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showErrorMessage]);\n\n    const onSignUpClicked = async () => {\n        try {\n            const response = await axios.post('/api/signup', {\n                email: emailValue,\n                password: passwordValue,\n            });\n            const { token } = response.data;\n            setToken(token);\n            history.push('/please-verify');\n        } catch (e) {\n            setErrorMessage(e.message);\n            setShowErrorMessage(true);\n       }\n    }\n\n    return (\n        <div className=\"content-container\">\n            <h1>Sign Up</h1>\n            {showErrorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input\n                value={emailValue}\n                onChange={e => setEmailValue(e.target.value)}\n                placeholder=\"someone@gmail.com\" />\n            <input\n                type=\"password\"\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <input\n                type=\"password\"\n                value={confirmPasswordValue}\n                onChange={e => setConfirmPasswordValue(e.target.value)}\n                placeholder=\"confirm password\" />\n            <hr />\n            <button\n                disabled={\n                    !emailValue || !passwordValue ||\n                    passwordValue !== confirmPasswordValue\n                }\n                onClick={onSignUpClicked}>Sign Up</button>\n            <button onClick={() => history.push('/login')}>Already have an account? Log In</button>\n        </div>\n    );\n}","import { Redirect, Route } from 'react-router-dom';\nimport {useUser} from './useUser'\n\nexport const PrivateRoute = props => {\n    const user = useUser();\n\n    if (!user) return <Redirect to=\"/login\" /> //checking if a user is logged in \n\n    return <Route {...props} />\n}","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\n\n\nexport const PleaseVerifyEmailPage = () => {\n    const history = useHistory();\n  \n    useEffect(() => {\n        setTimeout(() => {\n            history.push('/')\n\n        },3000)\n    },[history])\n \n    return (\n        <div className=\"content-container\">\n            <h1>Thanks for signing up!</h1>\n\n            <p>\n                A verification email has been sent to the signed up email address please verify your email to continue\n            </p>\n        </div>\n    )\n\n};","import { useHistory } from 'react-router-dom';\n\nexport const PasswordResetSuccess = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h1>Success!</h1>\n            <p>\n                Your password has been reset, now please login with your new password.\n            </p>\n            <button onClick={() => history.push('/login')}>Log in</button>\n        </div>\n    );\n}","import { useHistory } from 'react-router-dom';\n\nexport const PasswordResetFail = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h1>Uh oh...</h1>\n            <p>\n                Something went wrong while trying to reset your password.\n            </p>\n            <button onClick={() => history.push('/login')}>Back to Log in</button>\n        </div>\n    );\n};","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\nimport {PasswordResetFail} from './PasswordResetFail';\n\nexport const PasswordResetLandingPage = () => {\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [isFailure, setIsFailure] = useState(false);\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n    const { passwordResetCode } = useParams();\n\n    const onResetClicked = async () => {\n        try {\n            await axios.put(`/api/users/${passwordResetCode}/reset-password`, { newPassword: passwordValue });\n            setIsSuccess(true);\n        } catch (e) {\n            setIsFailure(true);\n        }\n    }\n\n    if (isFailure) return <PasswordResetFail />\n    if (isSuccess) return <PasswordResetSuccess />\n\n    return (\n        <div className=\"content-container\">\n            <h1>Reset Password</h1>\n            <p>Please enter a new password</p>\n            <input\n                type='password'\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"Password\" />\n            <input\n                type='password'\n                value={confirmPasswordValue}\n                onChange={e => setConfirmPasswordValue(e.target.value)}\n                placeholder=\"Confirm Password\" />\n            <button\n                disabled={!passwordValue || !confirmPasswordValue || passwordValue !== confirmPasswordValue}\n                onClick={onResetClicked}\n            >Reset Password</button>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useUser } from \"../auth/useUser\";\nimport { useToken } from \"../auth/useToken\";\n\nexport const ProfilePage = () => {\n  const [success, setSuccess] = useState(false);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n  const [token] = useToken();\n  const history = useHistory();\n  const user = useUser();\n  const { email, info, id } = user;\n  JSON.stringify(info);\n\n  useEffect(() => {\n    if (showSuccessMessage || showErrorMessage) {\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n        setShowErrorMessage(false);\n      }, 3000);\n    }\n  }, [showSuccessMessage, showErrorMessage]);\n\n  const abortController = new AbortController()\n  const signal = abortController.signal\n\n\n  const deleteProfile = async () => {\n    try {\n      await axios \n        .delete(`/api/users/${id}/delete`, {\n          headers: { Authorization: `Bearer ${token}` },\n        }, {signal})\n        .then(() => setSuccess(true))\n        .then(() => setShowSuccessMessage(true));\n      setTimeout(() => {\n        history.push(\"/login\");\n      }, 3000);\n      return () => {\n        abortController.abort();\n      }\n    } catch (err) {\n      console.log(err.message);\n      setErrorMessage(true);\n    }\n  };\n\n  return success ? (\n    <div className=\"content-container\">\n      {showSuccessMessage && (\n        <div className=\"success\">User account deleted successfully</div>\n      )}\n    </div>\n  ) : (\n    <div className=\"content-container\">\n      {showErrorMessage && <div className=\"fail\"> {errorMessage}</div>}\n      <div>\n        <Link to={\"/\"}>Back to home</Link>\n      </div>\n      <hr />\n      <b>Email:</b>\n      <p>{email}</p>\n      <b> favorite Food:</b>\n      <p>{info.favoriteFood}</p>\n      <b> Hair Color: </b> <p>{info.hairColor}</p>\n      <b> Bio:</b>\n      <p>{info.bio}</p>\n      <hr />\n      <b>Want to delete your account ?</b>\n      <button onClick={() => deleteProfile()}>Delete profile</button>\n    </div>\n  );\n};\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { UserInfoPage } from './pages/UserInfoPage';\nimport {ForgotPasswordPage } from './pages/ForgotPasswordPage';\nimport { LogInPage } from './pages/LoginPage';\nimport { EmailVerificationLandingPage } from './pages/EmailVerificationLandingPage';\nimport { SignUpPage } from './pages/SignUpPage';\nimport { PrivateRoute } from './auth/PrivateRoutes';\nimport { PleaseVerifyEmailPage } from './pages/PleaseVerifyEmail';\nimport {PasswordResetLandingPage} from './pages/PasswordResetLandingPage';\nimport {ProfilePage} from './pages/ProfilePage'\n\nexport const Routes = () => {\n    return (\n        <Router>\n            <Switch>\n                <PrivateRoute path=\"/\" exact>\n                    <UserInfoPage />\n                </PrivateRoute>\n                <Route path=\"/verify-email/:verificationString\">\n                    <EmailVerificationLandingPage />\n                </Route>\n                <Route path=\"/forgot-password\">\n                    <ForgotPasswordPage />\n                </Route>\n                <Route path=\"/reset-password/:passwordResetCode\">\n                    <PasswordResetLandingPage />\n                </Route>\n                <Route path=\"/login\" exact>\n                    <LogInPage/>\n                </Route>\n                <Route path=\"/please-verify\">\n                    <PleaseVerifyEmailPage />\n                </Route>\n                <Route path=\"/signup\" exact>\n                    <SignUpPage />\n                </Route>\n                <Route path=\"/profile\" exact>\n                    <ProfilePage/>\n                </Route>\n            </Switch>\n        </Router>\n    );\n};","import { Routes } from './Routes';\n\nexport const App = () => {\n    return (\n        <div className=\"page-container\">\n            <Routes />\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { unregister } from './serviceWorker'\n\nunregister();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}